{"ast":null,"code":"var _jsxFileName = \"/Users/litobanano/Documents/GitHub/Lito_Portfolio/src/components/projects.js\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Element } from \"react-scroll\";\n// import ScrollReveal from \"scrollreveal\";\nimport Project from \"./project\";\nimport FeaturedProject from \"./featuredProject\";\nimport { Container, Section, theme, media } from \"../styles\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport { projectsPage } from \"../json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProjectGrid = styled.div`\n  display: grid;\n  grid-gap: 20px;\n\n  ${media.mediumOnly} {\n    grid-template-columns: 1fr 1fr;\n\n    .featured {\n      grid-column: span 2;\n    }\n  }\n\n  ${media.largeUp} {\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n    grid-gap: 40px;\n\n    .project {\n      grid-column: span 2;\n    }\n\n    .feature-1 {\n      grid-column: 1/4;\n      grid-row: 1/3;\n    }\n\n    .feature-2 {\n      grid-column: 3/6;\n      grid-row: 3/5;\n    }\n  }\n`;\n\n// const ViewMoreProjects = styled.div`\n//   background-color: ${theme.colors.mayerPurple};\n//   color: ${theme.colors.light};\n//   text-align: center;\n//   padding: 12px 20px;\n//   border-radius: ${theme.borderRadius};\n//   width: 350px;\n//   margin-top: 30px;\n//   margin-left: auto;\n//   margin-right: auto;\n//   box-shadow: ${theme.boxShadow};\n//   transition: ${theme.transition};\n//   &:hover {\n//     cursor: pointer;\n//     box-shadow: ${theme.boxShadowHover};\n//   }\n\n// `\n_c = ProjectGrid;\nconst Projects = ({\n  data\n}) => {\n  // const revealRefs = [];\n\n  // useEffect(() => {\n\n  //   const revealConfig = theme.scrollRevealConfig;\n  //   revealConfig.afterReveal = (el) => {\n  //     el.style.transform = \"\";\n  //     el.style.transition = \"\";\n  //   };\n\n  //   revealRefs.forEach((ref) => ScrollReveal().reveal(ref, revealConfig));\n  // }, [revealRefs]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headsData: projectsPage,\n      scrollDown: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      bgColor: theme.colors.light,\n      id: \"projects\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Element, {\n          name: \"projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProjectGrid, {\n          children: data.map((project, i) => {\n            if (project.featured) {\n              return /*#__PURE__*/_createElement(FeaturedProject, {\n                ...project,\n                key: project.title\n                // ref={(ref) => (revealRefs[i] = ref)}\n                ,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }\n              });\n            }\n            return /*#__PURE__*/_createElement(Project, {\n              ...project,\n              key: project.title\n              // ref={(ref) => (revealRefs[i] = ref)}\n              ,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }\n            });\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Projects;\nexport default Projects;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectGrid\");\n$RefreshReg$(_c2, \"Projects\");","map":{"version":3,"names":["React","styled","Element","Project","FeaturedProject","Container","Section","theme","media","Header","Footer","projectsPage","jsxDEV","_jsxDEV","createElement","_createElement","Fragment","_Fragment","ProjectGrid","div","mediumOnly","largeUp","_c","Projects","data","children","headsData","scrollDown","fileName","_jsxFileName","lineNumber","columnNumber","bgColor","colors","light","id","name","map","project","i","featured","key","title","__self","__source","_c2","$RefreshReg$"],"sources":["/Users/litobanano/Documents/GitHub/Lito_Portfolio/src/components/projects.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Element } from \"react-scroll\";\r\n// import ScrollReveal from \"scrollreveal\";\r\nimport Project from \"./project\";\r\nimport FeaturedProject from \"./featuredProject\";\r\nimport { Container, Section, theme, media } from \"../styles\";\r\nimport Header from \"./header\";\r\nimport Footer from \"./footer\";\r\nimport { projectsPage } from \"../json\";\r\n\r\n\r\nconst ProjectGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 20px;\r\n\r\n  ${media.mediumOnly} {\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    .featured {\r\n      grid-column: span 2;\r\n    }\r\n  }\r\n\r\n  ${media.largeUp} {\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-gap: 40px;\r\n\r\n    .project {\r\n      grid-column: span 2;\r\n    }\r\n\r\n    .feature-1 {\r\n      grid-column: 1/4;\r\n      grid-row: 1/3;\r\n    }\r\n\r\n    .feature-2 {\r\n      grid-column: 3/6;\r\n      grid-row: 3/5;\r\n    }\r\n  }\r\n`;\r\n\r\n// const ViewMoreProjects = styled.div`\r\n//   background-color: ${theme.colors.mayerPurple};\r\n//   color: ${theme.colors.light};\r\n//   text-align: center;\r\n//   padding: 12px 20px;\r\n//   border-radius: ${theme.borderRadius};\r\n//   width: 350px;\r\n//   margin-top: 30px;\r\n//   margin-left: auto;\r\n//   margin-right: auto;\r\n//   box-shadow: ${theme.boxShadow};\r\n//   transition: ${theme.transition};\r\n//   &:hover {\r\n//     cursor: pointer;\r\n//     box-shadow: ${theme.boxShadowHover};\r\n//   }\r\n\r\n// `\r\n\r\nconst Projects = ({ data }) => {\r\n  // const revealRefs = [];\r\n\r\n\r\n  // useEffect(() => {\r\n   \r\n  //   const revealConfig = theme.scrollRevealConfig;\r\n  //   revealConfig.afterReveal = (el) => {\r\n  //     el.style.transform = \"\";\r\n  //     el.style.transition = \"\";\r\n  //   };\r\n\r\n  //   revealRefs.forEach((ref) => ScrollReveal().reveal(ref, revealConfig));\r\n  // }, [revealRefs]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      \r\n      <Header headsData={projectsPage} scrollDown={true} />\r\n\r\n\r\n      <Section bgColor={theme.colors.light} id=\"projects\">\r\n        <Container>\r\n          <Element name=\"projects\" />\r\n\r\n          <ProjectGrid>\r\n            {data.map((project, i) => {\r\n              \r\n              if (project.featured) {\r\n                return (\r\n                  <FeaturedProject\r\n                    {...project}\r\n                    key={project.title}\r\n                    // ref={(ref) => (revealRefs[i] = ref)}\r\n                  />\r\n                );\r\n              }\r\n              return (\r\n                <Project\r\n                  {...project}\r\n                  key={project.title}\r\n                  // ref={(ref) => (revealRefs[i] = ref)}\r\n                />\r\n              );\r\n            })}\r\n          </ProjectGrid>\r\n        </Container>\r\n      </Section>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}